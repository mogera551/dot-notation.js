const e="*",t="dot-notation",r=Symbol.for(t+".direct_get"),s=Symbol.for(t+".direct_set"),a={directlyGet:r,directlySet:s};class i{name;pathNames=[];parentPathNames=[];parentPath;regexp;level=0;isPrimitive;privateName;constructor(t){this.name=t,this.pathNames=t.split("."),this.parentPathNames=this.pathNames.slice(0,-1),this.parentPath=this.parentPathNames.join("."),this.lastPathName=this.pathNames.at(-1),this.regexp=new RegExp("^"+t.replaceAll(".","\\.").replaceAll("*","([0-9a-zA-Z_]*)")+"$"),this.level=this.pathNames.filter((t=>t===e)).length,this.isPrimitive=1===this.pathNames.length,this.privateName=this.isPrimitive?`_${this.name}`:void 0}findNearestWildcard(){return i.findNearestWildcard(this)}static findNearestWildcard(t){return t.lastPathName===e?t:""!==t.parentPath?this.findNearestWildcard(i.create(t.parentPath)):void 0}static create(e){const t=this.propertyNameByName.get(e);if(t)return t;const r=new i(e);return this.propertyNameByName.set(e,r),r}static propertyNameByName=new Map}class n{#e=[];#t;#r;#s;constructor(e){if(null==e)throw new Error("definedProperties is null");this.#t=new Set(e),this.#r=e.map((e=>i.create(e))),this.#s=new Map}get lastIndexes(){return this.#e[this.#e.length-1]}get stackIndexes(){return this.#e}get setOfDefinedProperties(){return this.#t}get definedPropertyNames(){return this.#r}get matchByName(){return this.#s}getByPropertyName(t,{propName:r},s){return Reflect.has(t,r.name,s)?Reflect.get(t,r.name,s):r.isPrimitive?Reflect.get(t,r.privateName,s):Reflect.get(this.getByPropertyName(t,{propName:i.create(r.parentPath)},s),r.lastPathName===e?this.lastIndexes[r.level-1]:r.lastPathName)}setByPropertyName(t,{propName:r,value:s},a){return Reflect.has(t,r.name,a)?Reflect.set(t,r.name,s,a):r.isPrimitive?Reflect.set(t,r.privateName,s,a):Reflect.set(this.getByPropertyName(t,{propName:i.create(r.parentPath)},a),r.lastPathName===e?this.lastIndexes[r.level-1]:r.lastPathName,s),!0}pushIndexes(e,t){this.#e.push(e);try{return Reflect.apply(t,this,[])}finally{this.#e.pop()}}getFunc=(e,t)=>({propName:r,indexes:s})=>this.pushIndexes(s,(()=>this.getByPropertyName(e,{propName:r},t)));setFunc=(e,t)=>({propName:r,indexes:s},a)=>this.pushIndexes(s,(()=>this.setByPropertyName(e,{propName:r,value:a},t)));getExpandLastLevel(e,{propName:t,indexes:r},s){const a=this.getFunc(e,s),n=t.findNearestWildcard();if(!n)throw new Error(`not found wildcard path of '${t.name}'`);const h=i.create(n.parentPath);return a({propName:h,indexes:r}).map(((e,s)=>a({propName:t,indexes:r.concat(s)})))}setExpandLastLevel(e,{propName:t,indexes:r,values:s},a){const n=this.getFunc(e,a),h=this.setFunc(e,a),p=t.findNearestWildcard();if(!p)throw new Error(`not found wildcard path of '${t.name}'`);const o=i.create(p.parentPath),c=n({propName:o,indexes:r});if(p.name===t.name)h({propName:o,indexes:r},s);else{if(s.length!==c.length)throw new Error(`not match value count '${t.name}'`);for(let e in c)h({propName:t,indexes:r.concat(Number(e))},s[e])}return!0}get(e,t,r){const s=this.getFunc(e,r);let n;if(t===a.directlyGet)return(t,s)=>{if(this.#t.has(t))return this.pushIndexes(s,(()=>this.getByPropertyName(e,{propName:i.create(t)},r)));throw new Error(`undefined property ${t}`)};if(t===a.directlySet)return(t,s,a)=>{if(this.#t.has(t))return this.pushIndexes(s,(()=>this.setByPropertyName(e,{propName:i.create(t),value:a},r)));throw new Error(`undefined property ${t}`)};if(n=/^\$([0-9]+)$/.exec(t))return this.lastIndexes?.[Number(n[1])-1]??void 0;if("@"===t.at(0)){const s=t.slice(1);if(!this.#t.has(s))throw new Error(`undefined property ${s}`);const a=i.create(s);if((this.lastIndexes?.length??0)+1<a.level)throw new Error("array level not match");const n=this.lastIndexes?.slice(0,a.level-1)??[];return this.getExpandLastLevel(e,{propName:a,indexes:n},r)}if(this.#t.has(t))return this.getByPropertyName(e,{propName:i.create(t)},r);if(this.#s.has(t))return s(this.#s.get(t));for(const e of this.#r){const r=e.regexp.exec(t);if(!r)continue;const a=r.slice(1);return this.#s.set(t,{propName:e,indexes:a}),s({propName:e,indexes:a})}throw new Error(`undefined property ${t}`)}set(e,t,r,s){const a=this.setFunc(e,s);if("@"===t.at(0)){const a=t.slice(1);if(!this.#t.has(a))throw new Error(`undefined property ${a}`);const n=i.create(a);if((this.lastIndexes?.length??0)+1<n.level)throw new Error("array level not match");const h=this.lastIndexes?.slice(0,n.level-1)??[];return this.setExpandLastLevel(e,{propName:n,indexes:h,values:r},s)}if(this.#t.has(t))return this.setByPropertyName(e,{propName:i.create(t),value:r},s);if(this.#s.has(t))return a(this.#s.get(t),r);for(const e of this.#r){const s=e.regexp.exec(t);if(!s)continue;const i=s.slice(1);return this.#s.set(t,{propName:e,indexes:i}),a({propName:e,indexes:i},r)}throw new Error(`undefined property ${t}`)}}export{n as Handler,i as PropertyName,r as SYM_DIRECT_GET,s as SYM_DIRECT_SET,a as Symbols};
